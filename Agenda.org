Taktisches Kampfverhalten von Ameisen

Projekt zur Evaluation des Kampfverhaltens von Ameisen in der freien Natur

* Implementierungsliste [1/6]
** TODO Militärverhalten normaler Ameisen [1/7]
 + [X] Siehe dazu: „[[/home/kairos/Daten/Universit%C3%A4t/K%C3%BCnstliche%20Intelligenz/Agentes%20Inteligentes%20y%20Sistemas%20Multiagente/%C3%9Cbungsbetrieb/Abschlussprojekt/Literatur%20die%20wirklich%20verwendet%20wird/Ant%20defence%20system:%20A%20mechanism%20organizing%20individual%20responses%20into%20efficient%20collective%20behavior%20-%202001.pdf][Ant defence system]]“ Es folgt die Fallunterscheidung:
   - Wenige Koloniemitglieder in der Nähe :: 25,7% Aggressivität
   - Viele Koloniemitglieder in der Nähe :: 76,7% Aggressivität
 + [ ] Wenn Ameisen aggressiv/neutral/defensiv sind, sollen sie es eine Weile
   bleiben, sie gehen aber immer mehr einem „Würfelzustand“ entgegen.
 + [ ] Aggressive Ameisen greifen koloniefremde Ameisen auf dem eigenen Feld an.
 + [ ] Aggressive Ameisen folgen koloniefremde Ameisen auf benachbarte Felder.
 + [ ] Neutrale Ameisen ignorieren koloniefremde Ameisen.
 + [ ] Hin und wieder „würfelt“ eine neutrale Ameise ihren nächsten Zustand aus.
 + [ ] Defensive Ameisen fliehen vor dem Feind in Richtung ihres Baus.
   
** TODO Kampfverhalten offensiver Ameisen [/]
 + [ ] /Optional:/ Verhalten sich neutral, falls sie in der Unterzahl sind.
 + [ ] /Optional:/ Organisieren Hilfe, falls sie in der Unterzahl sind.
 + [ ] Wenn sie gleichwertig oder in der Überzahl sind, dann sind sie
   ausnahmslos aggressiv.
 + [ ] Wenn sie angegriffen werden, sind sie aggressiv.
 + [ ] Aggressive Ameisen greifen koloniefremde Ameisen auf dem eigenen Feld an.
 + [ ] Aggressive Ameisen folgen koloniefremde Ameisen auf benachbarte Felder.
 + [ ] Neutrale Ameisen ignorieren koloniefremde Ameisen.
** DONE Wirtschaftsverhalten [3/3]
 1) [X] Verhalten aus: „[[/home/kairos/Daten/Universit%C3%A4t/K%C3%BCnstliche%20Intelligenz/Agentes%20Inteligentes%20y%20Sistemas%20Multiagente/%C3%9Cbungsbetrieb/Abschlussprojekt/Literatur%20die%20wirklich%20verwendet%20wird/A%20Pheromone-Based%20Utility%20Model%20for%20Collaborative%20Foraging%20-%202003.pdf][A Pheromone-Based Utility Model for Collaborative Foraging]]“
 2) [X] Jede Ameisenkolonie über ihre eigenen Pheromone verfügt und die der
    anderen nicht wahrnimmt.
 3) [X] Ameisen sollen nach einer Weile mit erfolgsloser Nahrungssuche zu ihrem
    Bau zurückkehren.
 4) /Optional:/ Wenn man bei der Ressourcensuche gerade eine Richtung eingeschlagen hat,
    dann verfolgt man diese präferenziell weiter.
 5) /Optional:/ Ameisen neigen dazu auch gerne schnell ganze Nahrungsquellen, statt bloß
    deren Randfelder in Besitz zu nehmen. Das ist strategisch geschickter, um
    andere Stämme fernzuhalten.

   *Bemerkung:* Dieses Verhalten wird tatsächlich gegenwärtig schon bis zu einem
    gewissen Grad erreicht. Eine Ameise, die sich bereits auf einem Nahrungsfeld
    befindet, schaut sich erst die Nachbarfelder an, bevor sie weiter das
    derzeitige Feld abbaut.
 6) /Optional:/ Ameisen wenden auch für den Nachhauseweg dasselbe System an,
    wie für die Nahrungssuche. Bis dahin wird leider nur bei der Nahrungssuche
    Erkundungsarbeit geleistet.

** TODO Sonstiges [2/4]
 1) [X] Maximaler Pheromonwert für Ressourcenpheromone (ist 1,0)
 2) [X] Pheromonverdunstung
 3) [ ] Klasse für Karte einführen, mit Begleitobjekt, dass die verschiedenen
    Kartentypen bereithält.
 4) [ ] Kompatibilitätsschicht Scala-Mason für implizite Typtransformierung
    (Int2D <-> (Int, Int); bzw.: Int3D <-> (Int, Int, Int)) hinzufügen.
 5) /Optional:/ Pheromondiffussion
 6) /Optional:/ Ameisen lassen im Kampf Ressourcen, die sie tragen, fallen.
 7) /Optional:/ Ameisen gehen Feldern, die zu voll sind, aus dem
    Weg. (Eventuell wird dann eine „Vergrößerung“ der Königin auf mehrere Felder
    benötigt, damit die Ameisen bei großer Populationszahl noch an sie
    herankommen)
 8) /Optional:/ Queen kann auch sterben und verhält sich in noch mehr
    Punkten wie eine normale Ameise.
 9) /Optional:/ Ameisen können altersbedingt sterben.

** TODO Benutzeroberfläche und Simulationskontrolle [3/5]
 1) [ ] Statistikfenster für jeden Stamm, das folgende Werte und deren Entwicklung anzeigt:
    - Die (derzeitige) Bevölkerungsstärke
    - Den Ressourcenbestand anzeigt
    - Ressourcen, die unterwegs sind
 2) [X] Es muss für jeden Stamm möglich sein, alle Pheromonkarten anzuzeigen.
 3) [X] Ameisenstämme sollen in unterschiedlichen Farben dargestellt werden.
 4) [X] Es kann auch eine Ressourcen-Karte angezeigt werden, anhand der man
    sehen kann, wie viele Ressourcen auf einem Feld sind.
 5) /Optional:/ Der Farbton im Ameisenfenster zeigt an, wie viele Individuen
    welches Stammes dort sind. (Bis zu einem Maximalwert)
 6) /Optional:/ Jeder Stamm hält seine Pheromonkarte in einem Fenster, mit
    veschiedenen Reitern. Je Reiter eine Karte. (Das macht dann nach
    gegenwärtigem Stand drei Reiter pro Fenster.) /Zu aufwändig!/

** TODO Quelltext-Arbeiten [1/6]
 + [X] Wirtschaftsteil zum Laufen bringen
 + [ ] Militärteil zum Laufen bringen
 + [ ] Analysefunktionen zum Laufen bringen
 + [ ] Fehlerkorrekturen
 + [ ] Lizenz wählen und dokumentieren
 + [ ] Veröffentlichung bei einem Quelltext-Hoster
 + /Optional:/ Dokumentationen dazu schreiben


* Gedanken-Sammelsurium, Implementierungsideen und -hinweise
** Mason Topologie
Ein Mason-2D Feld wird mit x und y-Koordinaten angesprochen. Der Wert x
entspricht dabei der Zeilennummer (begonnen mit 0), und y der Spaltennummer
(ebenfalls begonnen mit 0). Die Indizees entsprechen also in etwa denen in der
Mathematik, nur, dass die Indizes um -1 versetzt sind.

** Spring-Variante
Es kann auch überlegt werden, ob ein Spring-Spiel (Lua-Quelltextarbeiten
erforderlich) daraus gemacht wird. Gesteuert wird eine Ameisenkolonie nur
indirekt über die Parameter, die man einstellen kann.

Ansonsten einfach wieder mit einer KI arbeiten.

Als Darstellungs-Material können die „Chickens“ aus zero-k genommen werden.



* Pseudo-Quelltexte [1/4]
** TODO Sonstige Gedanken [6/8]
 + [X] Ameisen lassen bei ihrem Tod die Ressourcen, die sie tragen, fallen.
 + [X] Das Heimpheromonfeld muss mit +<Unendlich> initialisiert werden, mit
   Ausnahme des Felds der Königin.
 + [X] Das Nahrungspheromonenfeld muss mit 0 initialisiert werden.
 + [ ] Die Verdunstung: Nach x Schritten werden alle Felder um 1 dekrementiert
 + [ ] Die Diffussion
 + [X] Lernparameter so wählen: 0 < gamma < 1. Z.B: gamma = 0.9d
 + [X] Double-Felder für die Pheromone wählen, Außnahme: Heimpheromon, das bitte
   mit Int
 + [X] Möglichkeit die Bevölkerung zu zählen.
 + [ ] Es muss ein Mechanismus hinein, damit Ameisen nicht in jedem Schritt ihr
   Verhalten zu einem Artgenossen eines anderen Stammes ändern.

   /Idee:/ Aggresivitätszähler zwischen -10 (defensiv) über 0 (kann neue
   Aggresivität berechnen) bis +10 (aggresiv). Die Zeit nähert den Zustand an 0
   an.

** DONE Wirtschafstverhalten
Dieses teilen sich alle Ameisen
 * Modibestimmung
   + Fall :: Ameise hat maximal viel Nahrung oder ist „gelangweilt”:
     - Wahr :: ~Gehe nach Hause~
     - Falsch :: ~Suche nach Nahrung~

 * Gehe nach Hause
   + Fall :: Ameise ist schon zu Hause
     - Wahr :: Gibt etwaige Ressourcen an die Königin und verliere alle
               Langeweile beim Suchen von Ressourcen.
     - Falsch :: ~Folge Pheromonroute nach Hause~

 * Folge Pheromonroute nach Hause :: Ameise befindet sich gerade auf Position
      s. Sie nimmt immer den bisher optimalen Weg und passt nur die
      Nahrungspheromone an.
   + s' := Nachbarfeld mit größtem Heim-Pheromon
   + Ameise geht nach s'
   + ~Anpassung des Nahrungspheromonwerts der aktuellen Position~

 * Suche nach Nahrung :: Ameise befindet sich gerade auf Position s.
   + s' := Zielfeld. Mit gewisser Wkt. ist es das Feld mit der höchsten
     Nahrungspheromon-Rate. Ansonsten kann es irgendein anderes Feld sein. Diese
     Wahrscheinlichkeit hängt von der Explorationsrate ab.
   + Ameise geht nach s'
   + ~Anpassung des Nahrungspheromonwerts der aktuellen Position~
   + ~Anpassung des Heimheromonwerts der aktuellen Position~
   + ~Baue Ressourcen ab~

 * Anpassung des Nahrungspheromonwerts der aktuellen Position :: Die aktuelle
      Position ist s.
   + r(s) := Menge an Nahrung (= Wert des Feldes) auf diesem Feld
   + s' := Nachbarfeld von s, mit dem höchsten Nahrungspheromonenwert
   + NahrungsPhero(s) := r(s) + gamma * NahrungsPhero(s')

 * Anpassung des Heimpheromonwerts der aktuellen Position :: Die aktuelle
      Position ist s.
   + s' := Nachbarfeld, mit dem /geringsten/ Heimwert
   + HeimPhero(s) := min(HeimPhero(s), HeimPhero(s') + 1)

 * Baue Ressourcen ab :: Baut, wenn möglich, ressourcen ab. Wenn nicht, dann
      wird die Ameise etwas gelangweilter.
   + Fall :: Aktuelles Feld enthält Nahrung
     - Wahr :: Nahrung wird abgebaut und Langweilezähler auf den Maximalwert
               gesetzt.
     - Falsch :: Die Ameise wird etwas gelangweilter (Langweilezähler -= 1)
   
** TODO Kampfverhalten normaler Ameisen
 * Modibestimmung
 + Fall :: Feind in der Nähe?
   - Falsch :: ~Wirtschaftsverhalten~
   - Wahr :: ~Aggressiv sein?~

 * Aggressiv sein?
      Falls Ameise nicht aggressiv, geht sie mit bestimmter Wahrscheinlichkeit (abh. von Nahrungspheromonen)
      in den aggressiven Zustand

      Falls Ameise aggressiv (taktisches Verhalten)
        Verfolge den Feind. Ist er auf dem gleichen Feld, so greife ihn an

      Falls Ameise nicht aggressiv: ökonomisches Verhalten


   
** TODO Kampfverhalten aggressiver Ameisen
   /*
    TODO: Implementiere diesen Pseudocode
    Bemerkung: Die Ameise soll den Fall ausführen, der zuerst zutrifft.

      Fall 1: Feindliche Einheiten in der Nähe und in der Überzahl:
        Rufe weiträumig um Hilfe und
        wahre Distanz

      Fall 2: Feindliche Einheiten in der Nähe und in der Unterzahl
        Rufe nur eigene Einheiten im Umkreis herbei

      Fall 1: Andere Ameise schreit irgendwo um Hilfe
        Ameise lässt alles stehen und liegen und bewegt sich in Richtung Angriff
        Sie legt dabei keine Pheromonroute an

      Fall 2: Ameise hat vollen Rucksack
        Sie läuft in Richtung Königin. Sobald sie sich nahe genug bei ihr befindet, gibt sie die Fracht ab
        Pheromon wird abgegeben

    Fall 3:
    */
